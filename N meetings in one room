class Meeting {
    int start, end;

    Meeting(int start, int end) {
        this.start = start;
        this.end = end;
    }
}

class Solution {
    // Function to find the maximum number of meetings that can
    // be performed in a meeting room.
    public int maxMeetings(int n, int start[], int end[]) {
        Meeting[] meetings = new Meeting[n];
        
                for (int i = 0; i < n; i++) {
                    meetings[i] = new Meeting(start[i], end[i]);
                }
        
                // Sort meetings based on their end times
                Arrays.sort(meetings, Comparator.comparingInt(m -> m.end));
        
                int count = 1; // At least one meeting can be held
                int endTime = meetings[0].end;
        
                for (int i = 1; i < n; i++) {
                    if (meetings[i].start > endTime) {
                        count++;
                        endTime = meetings[i].end;
                    }
                }
        
                return count;
      }
}
